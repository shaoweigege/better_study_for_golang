/**
	学习函数 - 函数玩法 - 匿名函数
 */
package main

import "fmt"

// 全局匿名函数
var (
	Func = func(n1 int, n2 int) int {
		return n1 * n2
	}
)

func main() {

	var a = Func(1,2)
	fmt.Println(a)


	//1. 将匿名函数赋给一个变量(函数变量)，再通过该变量来调用匿名函数
	g := func(i int) { fmt.Printf("%d ", i) }

	//2. 在定义匿名函数时就直接调用，这种方式匿名函数只能调用一次
	func() {
		sum := 0
		for i := 1; i <= 100; i++ {
			sum += i
		}
		g(sum)
	}()

}


/*
	总结：
	1、Go 支持匿名函数，匿名函数就是没有名字的函数，如果我们某个函数只是希望使用一次，可以考 虑使用匿名函数，匿名函数也可以实现多次调用。
	2、匿名函数格式：fplus := func(x, y int) int { return x + y },然后通过变量名对函数进行调用：fplus(3,4)。
	1、匿名函数没有函数名，()直接在func关键词后面，最后一个()表示对这个函数直接进行调用
	2、全局匿名函数：如果将匿名函数赋给一个全局变量，那么这个匿名函数，就成为一个全局匿名函数，可以在程序有效。
 */





